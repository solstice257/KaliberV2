
@{
    ViewData["Title"] = "BoekWijzigen";
    var id = Url.ActionContext.RouteData.Values["id"];
}

@model Kaliber.Models.BookView

<h1>BoekWijzigen</h1>

<!DOCTYPE html>

<html>
<head>
    <title>Index</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
</head>
<body>
    <div class="col-5">
        @using (Html.BeginForm("DeleteOrUpdate", "Book", FormMethod.Post, new { enctype = "multiplart/form-data" }))
        {
        <table cellpadding="0" cellspacing="0">
            <tr>
                <th colspan="2" align="center">Book</th>
            </tr>
            <tr>
                <td>ISBN: </td>
                <td>
                    @Html.TextBoxFor(m => m.ISBN, new { id = "ISBN" })
                </td>
            </tr>
            <tr>
                <td>Titel: </td>
                <td>
                    @Html.TextBoxFor(m => m.Title, new { id = "Title" })
                </td>
            </tr>
            <tr>
                <td>Ondertitel: </td>
                <td>
                    @Html.TextBoxFor(m => m.Subtitle, new { id = "Sub" })
                </td>
            </tr>
            <tr>
                <td>Auteur ID: </td>
                <td>
                    @Html.TextBoxFor(m => m.author.AuthorID, new { id = "ID" })
                </td>
            </tr>
            <tr>
                <td>Voornaam auteur: </td>
                <td>
                    @Html.TextBoxFor(m => m.author.Firstname, new { id = "Firstname", @readonly = "true" })
                </td>
            </tr>
            <tr>
                <td>Tussenvoegsel: </td>
                <td>
                    @Html.TextBoxFor(m => m.author.Preposition, new { id = "Prep", @readonly = "true" })
                </td>
            </tr>
            <tr>
                <td>Achternaam auteur: </td>
                <td>
                    @Html.TextBoxFor(m => m.author.Lastname, new { id = "Lastname", @readonly = "true" })
                </td>
            </tr>
            <tr>
                <td>Uitgever: </td>
                <td>
                    @Html.TextBoxFor(m => m.publisher, new { id = "Publisher" })
                </td>
            </tr>
            <tr>
                <td>Categorie: </td>
                <td>
                    @Html.TextBoxFor(m => m.Category, new { id = "Category" })
                </td>
            </tr>
            <tr>
                <td>Jaar van Uitgave: </td>
                <td>
                    @Html.TextBoxFor(m => m.Year_of_publication, new { id = "Year" })
                </td>
            </tr>
            <tr>
                <td><input type="submit" name="submitButton" value="Update" /></td>
                <td><input type="submit" name="submitButton" value="Delete" /> </td>
            </tr>
        </table>
        }
    </div>
    <div id="list" class="col-5">

    </div>
    @*<script src="js/jquery-2.1.4.min.js"></script>
        <script src="js/bootstrap.min.js"></script>*@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>

    <script>
        document.getElementById("delete").onclick = Delete;
        function Delete(){
            var x = document.getElementById("ISBN").value
            $.ajax({
                type: "GET",
                traditional: true,
                url: "/Book/DeleteBook",
                data: { 'ISBN': x },
            });

            $.ajax({
                type: "GET",
                traditional: true,
                url: "/Book/Index",
            });
        }
           

    </script>

    <script>

        $(document).ready(function () {

            $.ajax({
                type: "GET",
                traditional: true,
                url: "/Book/SearchBookByTitle",
                data: { 'title': '@Html.Raw(@id.ToString())' },
                dataType: "json",
            }).done(function (arrayBook) {
                document.getElementById("list").innerHTML = "";

                for (var i = 0; i < arrayBook["books"].length; i++) {

                    document.getElementById("ISBN").value = arrayBook["books"][i]["isbn"];
                    document.getElementById("ID").value = arrayBook["books"][i]["author"]["authorID"];
                    document.getElementById("Title").value = arrayBook["books"][i]["title"];
                    document.getElementById("Sub").value = arrayBook["books"][i]["subtitle"];
                    document.getElementById("Firstname").value = arrayBook["books"][i]["author"]["firstname"];
                    document.getElementById("Prep").value = arrayBook["books"][i]["author"]["preposition"];
                    document.getElementById("Lastname").value = arrayBook["books"][i]["author"]["lastname"];
                    document.getElementById("Publisher").value = arrayBook["books"][i]["publisher"];
                    document.getElementById("Category").value = arrayBook["books"][i]["category"];
                    document.getElementById("Year").value = arrayBook["books"][i]["year_of_publication"];
                }

            }).fail(function (e) {
                console.log(e.responseText);
            });
        });
    </script>
</body>
</html>
